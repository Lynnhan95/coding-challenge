{"ast":null,"code":"var _jsxFileName = \"/Users/lynnhan1995/Desktop/dashboard/src/components/ScatterPlot.js\";\nimport React, { Component } from 'react';\nimport { scaleLinear, scaleSequential, interpolate, max, min } from 'd3v4';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ScatterPlot extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: props.data\n    };\n  }\n\n  render() {\n    // Get data from props\n    const peopleData = this.state.data; // Define SVG size\n\n    const margin = {\n      top: 50,\n      right: 50,\n      bottom: 50,\n      left: 50\n    },\n          width = 600,\n          height = 400; // Get max & min value of Weight, Height and Age\n\n    const maxAge = max(peopleData.map(d => d.age)),\n          maxWeight = max(peopleData.map(d => d.weight)),\n          maxHeight = max(peopleData.map(d => d.height));\n    const minAge = min(peopleData.map(d => d.age)),\n          minWeight = min(peopleData.map(d => d.weight)),\n          minHeight = min(peopleData.map(d => d.height));\n    console.log(maxAge, maxWeight, maxHeight); // Set X/ Y axis\n\n    let xScale = scaleLinear().domain([minHeight, maxHeight]).range([margin.left, width - margin.right]);\n    let yScale = scaleLinear().domain([minWeight, maxWeight]).range([height - margin.top, margin.bottom]);\n    const [xStart, xEnd] = xScale.range();\n    const [yStart, yEnd] = yScale.range();\n    const ticks = xScale.ticks(); // Set circle element radius mapping \n\n    let radius = scaleLinear().domain([minAge, maxAge]).range([10, 20]); // Set circle element color mapping\n\n    let color = scaleSequential(interpolate(\"orange\", \"#e65102\")).domain([minAge, maxAge]);\n    const circleElements = peopleData === null || peopleData === void 0 ? void 0 : peopleData.map((personData, i) => {\n      console.log(personData);\n      console.log(xScale(personData.height));\n      return /*#__PURE__*/_jsxDEV(\"circle\", {\n        r: radius(personData.age),\n        fill: color(personData.age),\n        cx: x(personData.height),\n        cy: y(personData.weight)\n      }, `boundaryDot-${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ScatterPlotWrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        width: width,\n        height: height,\n        children: [/*#__PURE__*/_jsxDEV(\"text\", {\n          x: \"20\",\n          y: \"30\",\n          \"font-size\": \"1em\",\n          children: \"Age by Height and Weight\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n          children: circleElements\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ScatterPlot;","map":{"version":3,"sources":["/Users/lynnhan1995/Desktop/dashboard/src/components/ScatterPlot.js"],"names":["React","Component","scaleLinear","scaleSequential","interpolate","max","min","ScatterPlot","constructor","props","state","data","render","peopleData","margin","top","right","bottom","left","width","height","maxAge","map","d","age","maxWeight","weight","maxHeight","minAge","minWeight","minHeight","console","log","xScale","domain","range","yScale","xStart","xEnd","yStart","yEnd","ticks","radius","color","circleElements","personData","i","x","y"],"mappings":"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","sourcesContent":["import React, {Component} from 'react' \nimport {scaleLinear, scaleSequential, interpolate, max, min} from 'd3v4'\n\nclass ScatterPlot extends Component {\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n          data: props.data\n        };\n      }\n\n    render() {\n        // Get data from props\n        const peopleData = this.state.data\n        // Define SVG size\n        const margin = {top: 50, right: 50, bottom: 50, left: 50},\n        width = 600,\n        height = 400 \n\n        // Get max & min value of Weight, Height and Age\n        const maxAge = max(peopleData.map(d => d.age)), \n        maxWeight = max(peopleData.map(d => d.weight)),\n        maxHeight = max(peopleData.map(d => d.height))\n\n        const minAge = min(peopleData.map(d => d.age)), \n        minWeight = min(peopleData.map(d => d.weight)),\n        minHeight = min(peopleData.map(d => d.height))\n\n        console.log(maxAge, maxWeight, maxHeight)\n\n        // Set X/ Y axis\n        let xScale = scaleLinear()\n        .domain([ minHeight, maxHeight ])\n        .range([margin.left,  width - margin.right]);\n\n        let yScale = scaleLinear()\n        .domain([ minWeight, maxWeight])\n        .range([ height - margin.top, margin.bottom]);\n\n        const [xStart, xEnd] = xScale.range();\n        const [yStart, yEnd] = yScale.range();\n        const ticks = xScale.ticks();\n\n        // Set circle element radius mapping \n        let radius = scaleLinear()\n        .domain([ minAge, maxAge ])\n        .range([ 10, 20 ])\n\n        // Set circle element color mapping\n        let color = scaleSequential(interpolate(\"orange\", \"#e65102\"))\n        .domain([ minAge, maxAge ]);\n\n        const circleElements = peopleData?.map((personData, i) => {\n            console.log(personData);\n            console.log(xScale(personData.height));\n            return (\n            <circle\n            key = {`boundaryDot-${i}`}\n            r = {radius(personData.age)}\n            fill = {color(personData.age)}\n            cx = {x(personData.height)}\n            cy = {y(personData.weight)}\n            />\n        \n            )\n        })\n        return (\n\n            <div className=\"ScatterPlotWrapper\">\n                <svg width={width} height={height}>\n                    <text x=\"20\" y=\"30\" font-size=\"1em\">Age by Height and Weight</text>\n                    <g>{circleElements}</g>\n                </svg>\n            </div>\n        )\n    }\n}\n\nexport default ScatterPlot;"]},"metadata":{},"sourceType":"module"}