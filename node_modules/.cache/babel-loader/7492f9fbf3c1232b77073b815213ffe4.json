{"ast":null,"code":"var _jsxFileName = \"/Users/lynnhan1995/Desktop/dashboard/src/components/ScatterPlot.js\";\nimport React, { Component } from 'react';\nimport { scaleLinear, scaleSequential, interpolate, max, min } from 'd3v4';\nimport { Popup } from 'semantic-ui-react';\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ScatterPlot extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: props.data\n    };\n  }\n\n  onClick(data) {\n    this.props.onClick(data);\n  }\n\n  render() {\n    // Get data from props\n    const peopleData = this.state.data; // Define SVG size\n\n    const margin = {\n      top: 50,\n      right: 50,\n      bottom: 50,\n      left: 50\n    },\n          width = 600,\n          height = 400; // Get max & min value of Weight, Height and Age\n\n    const maxAge = max(peopleData.map(d => d.age)),\n          maxWeight = max(peopleData.map(d => d.weight)),\n          maxHeight = max(peopleData.map(d => d.height));\n    const minAge = min(peopleData.map(d => d.age)),\n          minWeight = min(peopleData.map(d => d.weight)),\n          minHeight = min(peopleData.map(d => d.height));\n    const [gapX, gapY] = [3, 10];\n    console.log(maxAge, maxWeight, maxHeight); // Set X/ Y axis\n\n    let xScale = scaleLinear().domain([minHeight - gapX, maxHeight + gapX]).range([margin.left, width - margin.right]);\n    let yScale = scaleLinear().domain([minWeight - gapY, maxWeight + gapY]).range([height - margin.top, margin.bottom]);\n    const [xStart, xEnd] = xScale.range();\n    const [yStart, yEnd] = yScale.range();\n    const ticksX = xScale.ticks();\n    const ticksY = yScale.ticks(); // Set circle element radius mapping \n\n    let radius = scaleLinear().domain([minAge, maxAge]).range([10, 20]); // Set circle element color mapping\n\n    let color = scaleSequential(interpolate(\"orange\", \"#e65102\")).domain([minAge, maxAge]);\n    const style = {\n      borderRadius: 0,\n      opacity: 0.7,\n      padding: '2em'\n    };\n    const circleElements = peopleData === null || peopleData === void 0 ? void 0 : peopleData.map((personData, i) => {\n      return /*#__PURE__*/_jsxDEV(Popup, {\n        position: \"top left\",\n        style: style,\n        trigger: /*#__PURE__*/_jsxDEV(\"circle\", {\n          r: radius(personData.age),\n          fill: color(personData.age),\n          cx: xScale(personData.height),\n          cy: yScale(personData.weight),\n          onClick: this.onClick.bind(personData)\n        }, `boundaryDot-${i}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Popup.Header, {\n          children: [\"Name: \", personData.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Popup.Content, {\n          children: [\"Weight: \", personData.weight, \", Height: \", personData.height]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, `popover-${i}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this);\n    });\n    const tickElementsX = ticksX.map((t, i) => {\n      const x = xScale(t);\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"line\", {\n          x1: x,\n          x2: x,\n          y1: height - yEnd,\n          y2: height - yEnd + 5,\n          stroke: \"#000\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: x,\n          y: height - yEnd + 20,\n          fill: \"#000\",\n          textAnchor: \"middle\",\n          fontSize: 10,\n          children: t\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }, this);\n    });\n    const tickElementsY = ticksY.map((t, i) => {\n      const y = yScale(t);\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"line\", {\n          x1: xStart,\n          x2: xStart - 5,\n          y1: height - y,\n          y2: height - y,\n          stroke: \"#000\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: xStart - 20,\n          y: y,\n          fill: \"#000\",\n          textAnchor: \"middle\",\n          fontSize: 10,\n          children: t\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ScatterPlotWrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        width: width,\n        height: height,\n        children: [/*#__PURE__*/_jsxDEV(\"text\", {\n          x: \"20\",\n          y: \"30\",\n          \"font-size\": \"1em\",\n          children: \"Age by Height and Weight\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n          className: \"circles\",\n          children: circleElements\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n          className: \"axis\",\n          children: [/*#__PURE__*/_jsxDEV(\"line\", {\n            x1: xStart,\n            x2: xEnd,\n            y1: height - yEnd,\n            y2: height - yEnd,\n            stroke: \"#000\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n            x1: xStart,\n            x2: xStart,\n            y1: yEnd,\n            y2: yStart,\n            stroke: \"#000\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n          className: \"ticks\",\n          children: [tickElementsX, tickElementsY]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ScatterPlot;","map":{"version":3,"sources":["/Users/lynnhan1995/Desktop/dashboard/src/components/ScatterPlot.js"],"names":["React","Component","scaleLinear","scaleSequential","interpolate","max","min","Popup","ScatterPlot","constructor","props","state","data","onClick","render","peopleData","margin","top","right","bottom","left","width","height","maxAge","map","d","age","maxWeight","weight","maxHeight","minAge","minWeight","minHeight","gapX","gapY","console","log","xScale","domain","range","yScale","xStart","xEnd","yStart","yEnd","ticksX","ticks","ticksY","radius","color","style","borderRadius","opacity","padding","circleElements","personData","i","bind","name","tickElementsX","t","x","tickElementsY","y"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,WAAR,EAAqBC,eAArB,EAAsCC,WAAtC,EAAmDC,GAAnD,EAAwDC,GAAxD,QAAkE,MAAlE;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,OAAO,aAAP;;;AAEA,MAAMC,WAAN,SAA0BP,SAA1B,CAAoC;AAChCQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAEF,KAAK,CAACE;AADD,KAAb;AAGD;;AAEHC,EAAAA,OAAO,CAACD,IAAD,EAAO;AACV,SAAKF,KAAL,CAAWG,OAAX,CAAmBD,IAAnB;AACF;;AAEFE,EAAAA,MAAM,GAAG;AAEL;AACA,UAAMC,UAAU,GAAG,KAAKJ,KAAL,CAAWC,IAA9B,CAHK,CAIL;;AACA,UAAMI,MAAM,GAAG;AAACC,MAAAA,GAAG,EAAE,EAAN;AAAUC,MAAAA,KAAK,EAAE,EAAjB;AAAqBC,MAAAA,MAAM,EAAE,EAA7B;AAAiCC,MAAAA,IAAI,EAAE;AAAvC,KAAf;AAAA,UACAC,KAAK,GAAG,GADR;AAAA,UAEAC,MAAM,GAAG,GAFT,CALK,CASL;;AACA,UAAMC,MAAM,GAAGlB,GAAG,CAACU,UAAU,CAACS,GAAX,CAAeC,CAAC,IAAIA,CAAC,CAACC,GAAtB,CAAD,CAAlB;AAAA,UACAC,SAAS,GAAGtB,GAAG,CAACU,UAAU,CAACS,GAAX,CAAeC,CAAC,IAAIA,CAAC,CAACG,MAAtB,CAAD,CADf;AAAA,UAEAC,SAAS,GAAGxB,GAAG,CAACU,UAAU,CAACS,GAAX,CAAeC,CAAC,IAAIA,CAAC,CAACH,MAAtB,CAAD,CAFf;AAIA,UAAMQ,MAAM,GAAGxB,GAAG,CAACS,UAAU,CAACS,GAAX,CAAeC,CAAC,IAAIA,CAAC,CAACC,GAAtB,CAAD,CAAlB;AAAA,UACAK,SAAS,GAAGzB,GAAG,CAACS,UAAU,CAACS,GAAX,CAAeC,CAAC,IAAIA,CAAC,CAACG,MAAtB,CAAD,CADf;AAAA,UAEAI,SAAS,GAAG1B,GAAG,CAACS,UAAU,CAACS,GAAX,CAAeC,CAAC,IAAIA,CAAC,CAACH,MAAtB,CAAD,CAFf;AAIA,UAAM,CAACW,IAAD,EAAOC,IAAP,IAAe,CAAC,CAAD,EAAI,EAAJ,CAArB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYb,MAAZ,EAAoBI,SAApB,EAA+BE,SAA/B,EAnBK,CAqBL;;AACA,QAAIQ,MAAM,GAAGnC,WAAW,GACvBoC,MADY,CACL,CAAEN,SAAS,GAAEC,IAAb,EAAmBJ,SAAS,GAAEI,IAA9B,CADK,EAEZM,KAFY,CAEN,CAACvB,MAAM,CAACI,IAAR,EAAeC,KAAK,GAAGL,MAAM,CAACE,KAA9B,CAFM,CAAb;AAIA,QAAIsB,MAAM,GAAGtC,WAAW,GACvBoC,MADY,CACL,CAAEP,SAAS,GAACG,IAAZ,EAAkBP,SAAS,GAACO,IAA5B,CADK,EAEZK,KAFY,CAEN,CAAEjB,MAAM,GAAGN,MAAM,CAACC,GAAlB,EAAuBD,MAAM,CAACG,MAA9B,CAFM,CAAb;AAIA,UAAM,CAACsB,MAAD,EAASC,IAAT,IAAiBL,MAAM,CAACE,KAAP,EAAvB;AACA,UAAM,CAACI,MAAD,EAASC,IAAT,IAAiBJ,MAAM,CAACD,KAAP,EAAvB;AACA,UAAMM,MAAM,GAAGR,MAAM,CAACS,KAAP,EAAf;AACA,UAAMC,MAAM,GAAGP,MAAM,CAACM,KAAP,EAAf,CAjCK,CAmCL;;AACA,QAAIE,MAAM,GAAG9C,WAAW,GACvBoC,MADY,CACL,CAAER,MAAF,EAAUP,MAAV,CADK,EAEZgB,KAFY,CAEN,CAAE,EAAF,EAAM,EAAN,CAFM,CAAb,CApCK,CAwCL;;AACA,QAAIU,KAAK,GAAG9C,eAAe,CAACC,WAAW,CAAC,QAAD,EAAW,SAAX,CAAZ,CAAf,CACXkC,MADW,CACJ,CAAER,MAAF,EAAUP,MAAV,CADI,CAAZ;AAGA,UAAM2B,KAAK,GAAG;AACVC,MAAAA,YAAY,EAAE,CADJ;AAEVC,MAAAA,OAAO,EAAE,GAFC;AAGVC,MAAAA,OAAO,EAAE;AAHC,KAAd;AAMA,UAAMC,cAAc,GAAGvC,UAAH,aAAGA,UAAH,uBAAGA,UAAU,CAAES,GAAZ,CAAgB,CAAC+B,UAAD,EAAaC,CAAb,KAAmB;AACtD,0BACA,QAAC,KAAD;AAEA,QAAA,QAAQ,EAAG,UAFX;AAGA,QAAA,KAAK,EAAIN,KAHT;AAIA,QAAA,OAAO,eACH;AAEA,UAAA,CAAC,EAAIF,MAAM,CAACO,UAAU,CAAC7B,GAAZ,CAFX;AAGA,UAAA,IAAI,EAAIuB,KAAK,CAACM,UAAU,CAAC7B,GAAZ,CAHb;AAIA,UAAA,EAAE,EAAIW,MAAM,CAACkB,UAAU,CAACjC,MAAZ,CAJZ;AAKA,UAAA,EAAE,EAAIkB,MAAM,CAACe,UAAU,CAAC3B,MAAZ,CALZ;AAMA,UAAA,OAAO,EAAI,KAAKf,OAAL,CAAa4C,IAAb,CAAkBF,UAAlB;AANX,WACQ,eAAcC,CAAE,EADxB;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA,gCAeA,QAAC,KAAD,CAAO,MAAP;AAAA,+BAAqBD,UAAU,CAACG,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfA,eAgBA,QAAC,KAAD,CAAO,OAAP;AAAA,iCACaH,UAAU,CAAC3B,MADxB,gBAC0C2B,UAAU,CAACjC,MADrD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBA;AAAA,SACQ,WAAUkC,CAAE,EADpB;AAAA;AAAA;AAAA;AAAA,cADA;AAuBH,KAxBsB,CAAvB;AA0BA,UAAMG,aAAa,GAAGd,MAAM,CAACrB,GAAP,CAAW,CAACoC,CAAD,EAAIJ,CAAJ,KAAU;AACvC,YAAMK,CAAC,GAAGxB,MAAM,CAACuB,CAAD,CAAhB;AACA,0BACE,QAAC,KAAD,CAAO,QAAP;AAAA,gCACE;AAAM,UAAA,EAAE,EAAEC,CAAV;AAAa,UAAA,EAAE,EAAEA,CAAjB;AAAoB,UAAA,EAAE,EAAEvC,MAAM,GAACsB,IAA/B;AAAqC,UAAA,EAAE,EAAEtB,MAAM,GAACsB,IAAP,GAAc,CAAvD;AAA0D,UAAA,MAAM,EAAC;AAAjE;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,CAAC,EAAEiB,CADL;AAEE,UAAA,CAAC,EAAEvC,MAAM,GAACsB,IAAP,GAAc,EAFnB;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,UAAU,EAAC,QAJb;AAKE,UAAA,QAAQ,EAAE,EALZ;AAAA,oBAOGgB;AAPH;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,SAAqBJ,CAArB;AAAA;AAAA;AAAA;AAAA,cADF;AAcD,KAhBmB,CAAtB;AAkBA,UAAMM,aAAa,GAAGf,MAAM,CAACvB,GAAP,CAAW,CAACoC,CAAD,EAAIJ,CAAJ,KAAU;AACvC,YAAMO,CAAC,GAAGvB,MAAM,CAACoB,CAAD,CAAhB;AACA,0BACE,QAAC,KAAD,CAAO,QAAP;AAAA,gCACE;AAAM,UAAA,EAAE,EAAEnB,MAAV;AAAkB,UAAA,EAAE,EAAEA,MAAM,GAAC,CAA7B;AAAgC,UAAA,EAAE,EAAEnB,MAAM,GAACyC,CAA3C;AAA8C,UAAA,EAAE,EAAEzC,MAAM,GAACyC,CAAzD;AAA4D,UAAA,MAAM,EAAC;AAAnE;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,CAAC,EAAEtB,MAAM,GAAG,EADd;AAEE,UAAA,CAAC,EAAEsB,CAFL;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,UAAU,EAAC,QAJb;AAKE,UAAA,QAAQ,EAAE,EALZ;AAAA,oBAOGH;AAPH;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,SAAqBJ,CAArB;AAAA;AAAA;AAAA;AAAA,cADF;AAcD,KAhBmB,CAAtB;AAiBA,wBAEI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,6BACI;AAAK,QAAA,KAAK,EAAEnC,KAAZ;AAAmB,QAAA,MAAM,EAAEC,MAA3B;AAAA,gCACI;AAAM,UAAA,CAAC,EAAC,IAAR;AAAa,UAAA,CAAC,EAAC,IAAf;AAAoB,uBAAU,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAG,UAAA,SAAS,EAAC,SAAb;AAAA,oBAAwBgC;AAAxB;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAG,UAAA,SAAS,EAAC,MAAb;AAAA,kCACI;AAAM,YAAA,EAAE,EAAEb,MAAV;AAAkB,YAAA,EAAE,EAAEC,IAAtB;AAA4B,YAAA,EAAE,EAAEpB,MAAM,GAACsB,IAAvC;AAA6C,YAAA,EAAE,EAAEtB,MAAM,GAACsB,IAAxD;AAA8D,YAAA,MAAM,EAAC;AAArE;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAM,YAAA,EAAE,EAAEH,MAAV;AAAkB,YAAA,EAAE,EAAEA,MAAtB;AAA8B,YAAA,EAAE,EAAEG,IAAlC;AAAwC,YAAA,EAAE,EAAED,MAA5C;AAAoD,YAAA,MAAM,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAOI;AAAG,UAAA,SAAS,EAAC,OAAb;AAAA,qBACEgB,aADF,EAEEG,aAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAiBH;;AA7I+B;;AAgJpC,eAAetD,WAAf","sourcesContent":["import React, {Component} from 'react' \nimport {scaleLinear, scaleSequential, interpolate, max, min} from 'd3v4'\nimport { Popup } from 'semantic-ui-react'\nimport \"./style.css\" \n\nclass ScatterPlot extends Component {\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n          data: props.data\n        };\n      }\n\n    onClick(data) {\n        this.props.onClick(data);\n     }\n\n    render() {\n\n        // Get data from props\n        const peopleData = this.state.data\n        // Define SVG size\n        const margin = {top: 50, right: 50, bottom: 50, left: 50},\n        width = 600,\n        height = 400 \n\n        // Get max & min value of Weight, Height and Age\n        const maxAge = max(peopleData.map(d => d.age)), \n        maxWeight = max(peopleData.map(d => d.weight)),\n        maxHeight = max(peopleData.map(d => d.height))\n\n        const minAge = min(peopleData.map(d => d.age)), \n        minWeight = min(peopleData.map(d => d.weight)),\n        minHeight = min(peopleData.map(d => d.height))\n\n        const [gapX, gapY] = [3, 10]\n        console.log(maxAge, maxWeight, maxHeight)\n\n        // Set X/ Y axis\n        let xScale = scaleLinear()\n        .domain([ minHeight -gapX, maxHeight +gapX])\n        .range([margin.left,  width - margin.right]);\n\n        let yScale = scaleLinear()\n        .domain([ minWeight-gapY, maxWeight+gapY])\n        .range([ height - margin.top, margin.bottom]);\n\n        const [xStart, xEnd] = xScale.range();\n        const [yStart, yEnd] = yScale.range();\n        const ticksX = xScale.ticks();\n        const ticksY = yScale.ticks();\n\n        // Set circle element radius mapping \n        let radius = scaleLinear()\n        .domain([ minAge, maxAge ])\n        .range([ 10, 20 ])\n\n        // Set circle element color mapping\n        let color = scaleSequential(interpolate(\"orange\", \"#e65102\"))\n        .domain([ minAge, maxAge ]);\n\n        const style = {\n            borderRadius: 0,\n            opacity: 0.7,\n            padding: '2em',\n          }\n\n        const circleElements = peopleData?.map((personData, i) => {\n            return (\n            <Popup\n            key = {`popover-${i}`}\n            position = 'top left'\n            style = {style}\n            trigger = {\n                <circle\n                key = {`boundaryDot-${i}`}\n                r = {radius(personData.age)}\n                fill = {color(personData.age)}\n                cx = {xScale(personData.height)}\n                cy = {yScale(personData.weight)}\n                onClick = {this.onClick.bind(personData)}\n                />\n            }\n            >\n            <Popup.Header>Name: {personData.name}</Popup.Header>\n            <Popup.Content>\n                Weight: {personData.weight}, Height: {personData.height}\n            </Popup.Content>\n            </Popup>\n\n            )\n        })\n\n        const tickElementsX = ticksX.map((t, i) => {\n            const x = xScale(t);\n            return (\n              <React.Fragment key={i}>\n                <line x1={x} x2={x} y1={height-yEnd} y2={height-yEnd + 5} stroke=\"#000\" />\n                <text\n                  x={x}\n                  y={height-yEnd + 20}\n                  fill=\"#000\"\n                  textAnchor=\"middle\"\n                  fontSize={10}\n                >\n                  {t}\n                </text>\n              </React.Fragment>\n            );\n          })\n\n        const tickElementsY = ticksY.map((t, i) => {\n            const y = yScale(t);\n            return (\n              <React.Fragment key={i}>\n                <line x1={xStart} x2={xStart-5} y1={height-y} y2={height-y} stroke=\"#000\" />\n                <text\n                  x={xStart - 20}\n                  y={y}\n                  fill=\"#000\"\n                  textAnchor=\"middle\"\n                  fontSize={10}\n                >\n                  {t}\n                </text>\n              </React.Fragment>\n            );\n          })\n        return (\n\n            <div className=\"ScatterPlotWrapper\">\n                <svg width={width} height={height}>\n                    <text x=\"20\" y=\"30\" font-size=\"1em\">Age by Height and Weight</text>\n                    <g className=\"circles\">{circleElements}</g>\n                    <g className=\"axis\">\n                        <line x1={xStart} x2={xEnd} y1={height-yEnd} y2={height-yEnd} stroke=\"#000\" />\n                        <line x1={xStart} x2={xStart} y1={yEnd} y2={yStart} stroke=\"#000\" />\n                    </g>\n                    <g className=\"ticks\">\n                     {tickElementsX}\n                     {tickElementsY}\n                    </g>\n                </svg>\n            </div>\n        )\n    }\n}\n\nexport default ScatterPlot;"]},"metadata":{},"sourceType":"module"}