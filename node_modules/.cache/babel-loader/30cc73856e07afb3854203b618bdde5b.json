{"ast":null,"code":"var _jsxFileName = \"/Users/lynnhan1995/Desktop/dashboard/src/components/Header.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { AppBar, Toolbar, Button, Drawer, List, Divider, ListItem, ListItemIcon, ListItemText, InboxIcon, MailIcon } from \"@material-ui/core\";\nimport { headerData } from '../data/HeaderData';\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getNavButton = () => {\n  return headerData.map(({\n    label,\n    href\n  }) => {\n    return /*#__PURE__*/_jsxDEV(Button, {\n      key: label,\n      color: \"inherit\",\n      to: href,\n      component: RouterLink,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this);\n  });\n};\n\nexport default function Header() {\n  _s();\n\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false\n  });\n\n  const toggleDrawer = (anchor, open) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state,\n      [anchor]: open\n    });\n  };\n\n  const list = anchor => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: clsx(classes.list, {\n      [classes.fullList]: anchor === 'top' || anchor === 'bottom'\n    }),\n    role: \"presentation\",\n    onClick: toggleDrawer(anchor, false),\n    onKeyDown: toggleDrawer(anchor, false),\n    children: [/*#__PURE__*/_jsxDEV(List, {\n      children: ['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n          children: index % 2 === 0 ? /*#__PURE__*/_jsxDEV(InboxIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 50\n          }, this) : /*#__PURE__*/_jsxDEV(MailIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 66\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)]\n      }, text, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: ['All mail', 'Trash', 'Spam'].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n          children: index % 2 === 0 ? /*#__PURE__*/_jsxDEV(InboxIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 50\n          }, this) : /*#__PURE__*/_jsxDEV(MailIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 66\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this)]\n      }, text, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n\n  const Nav = () => {\n    return /*#__PURE__*/_jsxDEV(Toolbar, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: toggleDrawer(\"left\", true),\n        children: \"Left Menu Navigator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n        anchor: \"left\",\n        open: state[\"left\"],\n        onClose: toggleDrawer(\"left\", false),\n        children: list(anchor)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), getNavButton()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    children: /*#__PURE__*/_jsxDEV(AppBar, {\n      className: \"header\",\n      children: Nav()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Header, \"UPg06XLI5SPBzZwzN8mfJUIUqSc=\");\n\n_c = Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/lynnhan1995/Desktop/dashboard/src/components/Header.js"],"names":["React","Link","RouterLink","AppBar","Toolbar","Button","Drawer","List","Divider","ListItem","ListItemIcon","ListItemText","InboxIcon","MailIcon","headerData","getNavButton","map","label","href","key","color","to","component","Header","state","setState","useState","top","left","bottom","right","toggleDrawer","anchor","open","event","type","list","clsx","classes","fullList","text","index","Nav"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { AppBar, Toolbar, Button, Drawer, List, Divider, ListItem, ListItemIcon, ListItemText, InboxIcon, MailIcon} from \"@material-ui/core\";\nimport { headerData } from '../data/HeaderData'\nimport \"./style.css\" \n\nconst getNavButton = () => {\n\n    return headerData.map(({ label, href }) => {\n        return (\n        <Button\n            {...{\n            key: label,\n            color: \"inherit\",\n            to: href,\n            component: RouterLink,\n            }}\n        >\n            {label}\n        </Button>\n        );\n    });\n\n};\n\n\nexport default function Header() {\n    const [state, setState] = React.useState({\n        top: false,\n        left: false,\n        bottom: false,\n        right: false,\n      });\n\n    const toggleDrawer = (anchor, open) => (event) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n        return;\n    }\n\n    setState({ ...state, [anchor]: open });\n    };\n    \n    const list = (anchor) => (\n        <div\n          className={clsx(classes.list, {\n            [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n          })}\n          role=\"presentation\"\n          onClick={toggleDrawer(anchor, false)}\n          onKeyDown={toggleDrawer(anchor, false)}\n        >\n          <List>\n            {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n              <ListItem button key={text}>\n                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            ))}\n          </List>\n          <Divider />\n          <List>\n            {['All mail', 'Trash', 'Spam'].map((text, index) => (\n              <ListItem button key={text}>\n                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            ))}\n          </List>\n        </div>\n      );\n    \n\n    const Nav = () => {\n        return (\n        <Toolbar>\n            <Button onClick={toggleDrawer(\"left\", true)}>Left Menu Navigator</Button>\n            <Drawer anchor=\"left\" open={state[\"left\"]} onClose={toggleDrawer(\"left\", false)}>\n            {list(anchor)}\n            </Drawer>\n            {getNavButton()}\n        </Toolbar>)\n    };\n\n    return (\n        <header>\n          <AppBar className=\"header\">{Nav()}</AppBar>\n        </header>\n      );\n\n}\n"]},"metadata":{},"sourceType":"module"}