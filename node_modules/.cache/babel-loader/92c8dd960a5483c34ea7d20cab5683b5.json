{"ast":null,"code":"var _jsxFileName = \"/Users/lynnhan1995/Desktop/dashboard/src/components/ScatterPlot.js\";\nimport React, { Component } from 'react';\nimport { scaleLinear, max } from 'd3v4';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ScatterPlot extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: props.data\n    };\n  }\n\n  render() {\n    // Get data from props\n    const peopleData = this.state.data; // Define SVG size\n\n    const margin = {\n      top: 10,\n      right: 30,\n      bottom: 10,\n      left: 30\n    },\n          width = 600 - margin.left - margin.right,\n          height = 400 - margin.top - margin.bottom; // Get max & min value of Weight, Height and Age\n\n    const maxAge = max(peopleData.map(d => d.age)),\n          maxWeight = max(peopleData.map(d => d.weight)),\n          maxHeight = max(peopleData.map(d => d.height));\n    const minAge = min(peopleData.map(d => d.age)),\n          minWeight = min(peopleData.map(d => d.weight)),\n          minHeight = minHeight(peopleData.map(d => d.height));\n    console.log(maxAge, maxWeight, maxHeight); // Set X/ Y axis\n\n    let x = scaleLinear().domain([0, 100]).range([0, width]);\n    let y = scaleLinear().domain([0, 100]).range([height, 0]);\n    let radius = scaleLiner().domain([minAge, maxAge]);\n    const circleElements = peopleData === null || peopleData === void 0 ? void 0 : peopleData.map((personData, i) => {\n      console.log(personData);\n      console.log(x(personData.height));\n      return /*#__PURE__*/_jsxDEV(\"circle\", {\n        r: \"1\",\n        fill: \"red\",\n        cx: x(personData.height),\n        cy: y(personData.weight)\n      }, `boundaryDot-${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ScatterPlotWrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        width: width,\n        height: height,\n        children: /*#__PURE__*/_jsxDEV(\"g\", {\n          children: circleElements\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ScatterPlot;","map":{"version":3,"sources":["/Users/lynnhan1995/Desktop/dashboard/src/components/ScatterPlot.js"],"names":["React","Component","scaleLinear","max","ScatterPlot","constructor","props","state","data","render","peopleData","margin","top","right","bottom","left","width","height","maxAge","map","d","age","maxWeight","weight","maxHeight","minAge","min","minWeight","minHeight","console","log","x","domain","range","y","radius","scaleLiner","circleElements","personData","i"],"mappings":"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","sourcesContent":["import React, {Component} from 'react' \nimport {scaleLinear, max} from 'd3v4'\n\nclass ScatterPlot extends Component {\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n          data: props.data\n        };\n      }\n\n    render() {\n        // Get data from props\n        const peopleData = this.state.data\n        // Define SVG size\n        const margin = {top: 10, right: 30, bottom: 10, left: 30},\n        width = 600 - margin.left - margin.right,\n        height = 400 - margin.top - margin.bottom\n\n        // Get max & min value of Weight, Height and Age\n        const maxAge = max(peopleData.map(d => d.age)), \n        maxWeight = max(peopleData.map(d => d.weight)),\n        maxHeight = max(peopleData.map(d => d.height))\n\n        const minAge = min(peopleData.map(d => d.age)), \n        minWeight = min(peopleData.map(d => d.weight)),\n        minHeight = minHeight(peopleData.map(d => d.height))\n\n        console.log(maxAge, maxWeight, maxHeight)\n\n        // Set X/ Y axis\n        let x = scaleLinear()\n        .domain([0, 100])\n        .range([ 0, width ]);\n\n        let y = scaleLinear()\n        .domain([0, 100])\n        .range([ height, 0]);\n\n        let radius = scaleLiner()\n        .domain([minAge, maxAge])\n\n        const circleElements = peopleData?.map((personData, i) => {\n            console.log(personData);\n            console.log(x(personData.height));\n            return (\n            <circle\n            key = {`boundaryDot-${i}`}\n            r = \"1\"\n            fill = \"red\"\n            cx = {x(personData.height)}\n            cy = {y(personData.weight)}\n            />\n        \n            )\n        })\n        return (\n\n            <div className=\"ScatterPlotWrapper\">\n                <svg width={width} height={height}>\n                    <g>{circleElements}</g>\n                </svg>\n            </div>\n        )\n    }\n}\n\nexport default ScatterPlot;"]},"metadata":{},"sourceType":"module"}